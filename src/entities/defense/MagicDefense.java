package entities.defense;

import entities.character.Character;

import java.util.Arrays;
import java.util.List;

public class MagicDefense extends Defense {

    private static final List<String> playerActionList = Arrays.asList(
            " se abaixa e preparando uma barreira m치gica de prote칞칚o! para se proteger de ",
            " ergue suas m칚os, concentrando-se em uma barreira m치gica! para evitar o ataque de ",
            " seus olhos brilham enquanto se prepara para conjurar uma barreira m치gica! para absorver o ataque de ",
            " come칞a a canalizar energia m치gica para criar uma barreira protetora! para se defender de "
    );


    private static final List<String> skillActionList = Arrays.asList(
            " ativa uma barreira m치gica de prote칞칚o!",
            " conjura um escudo m치gico para bloquear ataques!",
            " invoca uma aura m치gica defensiva!",
            " emite magia de prote칞칚o!",
            " fortalece sua defesa com magia!",
            " cria um campo m치gico de defesa!",
            " conjura uma barreira m치gica!"
    );


    public MagicDefense(String name, String description, String skillAction, int cooldown, boolean special) {
        super(name, description, skillAction, cooldown, special);
    }

    @Override
    public void prepareSkillToAttack(Character player1, Character player2) {
        System.out.println("\n游댩 " + player1.getName() + " " + this.getAction(playerActionList) + " " + this.getName());
        this.executeSelectedSkill(player1, player2);
    }

    public static MagicDefense ofArcaneBarrier() {
        return new MagicDefense("Barreira Arcana",
                "Cria escudo m치gico (n칚o causa dano).",
                "游댩 Uma barreira m치gica envolve voc칡, protegendo contra ataques.",
                2, false);
    }

    @Override
    public void skillTypeAction(Character actionPlayer) {
        System.out.println("游댩 " + actionPlayer.getName() + this.getAction(skillActionList));
    }

}
